---
- name: Ensure nginx is installed
  apt:
    pkg: nginx
    state: present
    cache_valid_time: "{{ cache_valid_time }}"
    update_cache: yes

- name: Ensure index page directory exists
  file:
    path: "/var/www/{{ fqdn }}"
    state: directory

- name: Set up index page
  template:
    src: fqdn/index.html.j2
    dest: /var/www/{{ fqdn }}/index.html

- name: Add domain to etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127.0.0.1 {{ fqdn }}$'
    line: "127.0.0.1\t{{ fqdn }}"

- name: install letsencrypt
  apt:
    name: letsencrypt
    state: latest

- name: create letsencrypt directory
  file:
    name: /var/www/letsencrypt
    state: directory

- name: Remove default nginx config
  file:
    name: /etc/nginx/sites-enabled/default
    state: absent

- name: Install system nginx config
  template:
    src: etc/nginx/nginx.conf.j2
    dest: /etc/nginx/nginx.conf

# - name: Install Cipherlist snippets
#   template:
#     src: etc/nginx/snippets/ssl-params.conf.j2
#     dest: /etc/nginx/snippets/ssl-params.conf

- name: Install nginx site for letsencrypt requests
  template:
    src: etc/nginx/sites-enabled/nginx-http.j2
    dest: /etc/nginx/sites-enabled/http

- name: Reload nginx to activate letsencrypt site
  service:
    name: nginx
    state: restarted

- name: Create letsencrypt certificate
  shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ fqdn }}
  args:
    creates: /etc/letsencrypt/live/{{ fqdn }}

- name: Generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

- name: Install nginx site for default site
  template:
    src: etc/nginx/sites-enabled/nginx-https.j2
    dest: /etc/nginx/sites-enabled/nginx-https

- name: Reload nginx to activate site
  service:
    name: nginx
    state: restarted

- name: Add letsencrypt cronjob for cert renewal
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ fqdn }} && service nginx reload
